Something went wrong with the creation of an Angular CLI application.
  Error message: 

-----------------------------------------------------------------------------------------

This Item Template adds an Angular CLI application to an existing ASP.NET Core 2 project.

NOTE: To create an Angular CLI application as a stand-alone static website project, with no server-side code, use the Project Template that comes with this template in the same Visual Studio Extension.

-----------------------------------------------------------------------------------------

If you selected the "Add automatically" option in the dialog, this item template would do the following:

* Run "ng new {projectName} --directory . --routing --skip-git --skip-install" in the project's root directory.

* For Angular CLI 1.x: Add a "baseHref" property to the "apps[0]" object in the .angular-cli.json file and assign either "/" for an Empty or WebAPI project or "/ng/" for an MVC or Razor Pages project to that property.
  For Angular CLI 6: Add a "baseHref" property to the {{projectName}} object in the angular.json file and assign either "/" for an Empty or WebAPI project or "/ng/" for an MVC or Razor Pages project to that property.

* If an existing package.json is found, merge the package.json file generated by Angular CLI with it. 
The actual installation of the npm packages does not happen at the time of the application creation, it will happens on next Build of the project.

* If an existing .gitignore file is found, append Angular CLI entries to it.

* Add NuGet package AfominDotCom.AspNetCore.AngularCLI to the project. 
That NuGet package is actually always added, even if you did not choose the Automatic Installation option.

* Modify the Configure method in the Startup.cs file. Insert the following code snippet at the end of the method for an WebAPI, MVC or Razor Pages project or before "app.Run(...)" for an Empty project. 
If no existing "app.UseStaticFiles()" call was found in the Configure method, uncomment the "app.UseStaticFiles();" line in the code snippet.

if (env.IsDevelopment())
{
  app.UseWebSockets().UseNgProxy();
}
else
{
  // app.UseStaticFiles(); // Uncomment this line if it is not present somewhere else in the Configure method.
  app.UseNgRoute();
}

-----------------------------------------------------------------------------------------

The path specified as "baseHref" in the .angular-cli.json/angular.json file, is a relative path.
For example, if your main ASP.NET Core website runs at http://localhost:12345 and the "baseHref" value is "/ng/", the Angular app will be served at http://localhost:12345/ng
Requests to that relative path will be proxied to the standard NG Development Server launched from the ASP.NET Core code. 
Please note, the proxy is used during development only. 

-----------------------------------------------------------------------------------------

During a Publish, the template looks up a script name in package.json corresponding to the Build Configuration, and if found, executes it. 
For example, if the Build Configuration name is "Release", it will look for a script named "build:Release". 
If no corresponding script name is found, the default "build" script will be executed.
Then the template copies the files produced by the build script to a subfolder under the standard "wwwroot" directory, according to the relative path specified in the "baseHref" setting described above.

-----------------------------------------------------------------------------------------

You can find the latest documentation at https://github.com/andfomin/NgProjectTemplate

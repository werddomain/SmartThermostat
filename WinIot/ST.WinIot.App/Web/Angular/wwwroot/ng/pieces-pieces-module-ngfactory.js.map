{"version":3,"sources":["webpack:///./src/app/layout/setup/pieces/pieces-routing.module.ts","webpack:///./src/app/layout/setup/pieces/pieces.component.html","webpack:///./src/app/layout/setup/pieces/pieces.component.ts","webpack:///./src/app/layout/setup/pieces/pieces.module.ts"],"names":[],"mappings":"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","file":"pieces-pieces-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { piecesComponent } from './pieces.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n\t\tcomponent: piecesComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class piecesRoutingModule {}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n\r\n       \r\n        <!-- ######## Peices Card #########-->\r\n        <div class=\"card m-5\">\r\n            <div class=\"card-header\">\r\n                Pieces\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"peiceName\" class=\"col-4 col-form-label\">Name</label>\r\n                        <div class=\"col-8\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <div class=\"input-group-text\">\r\n                                        <i class=\"fa fa-codepen\"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <input id=\"peiceName\" name=\"peiceName\" [(ngModel)]=\"currentPiece.name\" placeholder=\"Living Room\" type=\"text\" class=\"form-control here\" required=\"required\" maxlength=\"30\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"pieceFloor\" class=\"col-4 col-form-label\">Floor</label>\r\n                        <div class=\"col-8\">\r\n                            <input id=\"pieceFloor\" [(ngModel)]=\"currentPiece.floor\" name=\"pieceFloor\" placeholder=\"1\" type=\"number\" class=\"form-control here\" aria-describedby=\"pieceFloorHelpBlock\" required=\"required\">\r\n                            <span id=\"pieceFloorHelpBlock\" class=\"form-text text-muted\">0 = basement, 1 = 1st floor</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"peiceType\" class=\"col-4 col-form-label\">Piece Type</label>\r\n                        <div class=\"col-8\">\r\n                            <select [(ngModel)]=\"currentPiece.type\" name=\"peiceType\" id=\"peiceType\" class=\"form-control\" required>\r\n                                <option *ngFor=\"let item of piecesTypes\" value=\"{{item.value}}\">{{item.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"offset-4 col-8\">\r\n                            <button class=\"btn btn-success\" type=\"button\" *ngIf=\"!isInEdit\" (click)=\"addPeice()\"><i class=\"fa fa-plus\"></i> Add</button>\r\n                            <button class=\"btn btn-primary\" type=\"button\" *ngIf=\"isInEdit\" (click)=\"savePeice()\"><i class=\"fa fa-save\"></i> Save</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"list-group list-group-flush\">\r\n\r\n                    <div *ngFor=\"let item of pieces; let i = index\" class=\"list-group-item list-group-item-action\">\r\n                        <div class=\"d-flex w-100 justify-content-between\">\r\n                            <h5 class=\"mb-1\">{{item.name}}</h5>\r\n                            <small class=\"text-muted\">{{getPieceTypeName(item.type)}}</small>\r\n                        </div>\r\n                        <p class=\"mb-1\">\r\n                            <button type=\"button\" (click)=\"editPeice(i)\" class=\"btn btn-primary\"><i class=\" fa fa-pencil\"></i> Edit</button>\r\n                            <button type=\"button\" (click)=\"removePeice(i)\" class=\"btn btn-danger\"><i class=\"fa fa-trash\"></i> Remove</button>\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- ######## /Peices Card #########-->\r\n        <div *ngIf=\"EndMessage\" class=\"alert alert-danger\" role=\"alert\">\r\n            {{EndMessage}}\r\n        </div>\r\n        <button *ngIf=\"canSave\" class=\"btn btn-lg btn-success\" type=\"button\" (click)=\"Next()\">Next <i class=\"fa fa-forward\"></i></button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { SetupService } from \"../setup.service\"\r\nimport { Home, Piece, PieceTypeEnum } from '@app/shared/classes'\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'app-pieces',\r\n    templateUrl: './pieces.component.html',\r\n    styleUrls: ['./pieces.component.less']\r\n})\r\nexport class piecesComponent implements OnInit {\r\n    constructor(private setupService: SetupService) {\r\n        this.currentPiece = {\r\n            floor: 1,\r\n            homeId: \"\",\r\n            name: \"\",\r\n            type: PieceTypeEnum.Living_Room\r\n        };\r\n    }\r\n    currentPiece: Piece;\r\n    pieces: Array<Piece>;\r\n    piecesTypes: Array<SelectItem>;\r\n    isInEdit: boolean = false;\r\n    canSave: boolean = false;\r\n\r\n    getPieceTypeName(type: PieceTypeEnum): string {\r\n        return PieceTypeEnum[type].replace(\"_\", \" \");\r\n    }\r\n    ngOnInit() {\r\n        this.setupService.setHeadling(\"Pieces\");\r\n        this.setupService.ActivateBreadCrumb({\r\n            active: true,\r\n            icon: \"fa-vector-square\",\r\n            name: \"Pieces\",\r\n            route: \"/setup/pieces\"\r\n        });\r\n\r\n        if (this.setupService.Pieces != null && this.pieces.length > 0)\r\n            this.pieces = this.setupService.Pieces;\r\n        this.pieces = new Array<Piece>();\r\n        this.piecesTypes = this.getEnumValues();\r\n    }\r\n    cleanCurrentPeice() {\r\n        this.currentPiece = this.clonePiece(this.currentPiece);\r\n        this.currentPiece.name = \"\";\r\n        this.currentPiece.pieceId = \"\";\r\n    }\r\n    addPeice() {\r\n        this.currentPiece.homeId = this.setupService.CurrentHome.homeId;\r\n        this.pieces.push(this.currentPiece);\r\n        this.cleanCurrentPeice();\r\n    }\r\n    savePeice() {\r\n        this.isInEdit = false;\r\n      \r\n        this.cleanCurrentPeice();\r\n    }\r\n    editPeice(index: number) {\r\n        \r\n        this.isInEdit = true;\r\n        this.currentPiece = this.pieces[index];\r\n    }\r\n    removePeice(index: number) {\r\n        this.pieces.splice(index, 1);\r\n    }\r\n    private clonePiece(item: Piece): Piece {\r\n        return {\r\n            floor: item.floor,\r\n            name: item.name,\r\n            type: item.type,\r\n            homeId: item.homeId\r\n\r\n        };\r\n    }\r\n    \r\n    private getEnumValues(): Array<SelectItem> {\r\n        /* Enums are listed like this in the object:\r\n         * 0: \"EnumName0\"\r\n         * 1: \"EnumName1\"\r\n         * \"EnumName0\": 0\r\n         * \"EnumName1\": 1\r\n         * */\r\n        let keys = new Array<SelectItem>();\r\n        for (var enumMember in PieceTypeEnum) {\r\n            //So we get only the integer one\r\n            var isValueProperty = parseInt(enumMember, 10) >= 0\r\n            if (isValueProperty) {\r\n                //Then we get the corresponding name by PieceTypeEnum[enumMember]\r\n                keys.push(<SelectItem>{ value: parseInt(enumMember), name: (<string>PieceTypeEnum[enumMember]).replace(\"_\", \" \") });\r\n\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    EndMessage: string;\r\n\r\n\r\n}\r\nexport interface SelectItem {\r\n    value: number;\r\n    name: string;\r\n}\r\n//@Pipe({\r\n//    name: 'enumToArray'\r\n//})\r\n//export class EnumToArrayPipe implements PipeTransform {\r\n//    transform(value, args: string[]): any {\r\n//        let keys = [];\r\n//        for (var enumMember in value) {\r\n//            var isValueProperty = parseInt(enumMember, 10) >= 0\r\n//            if (isValueProperty) {\r\n//                keys.push(<SelectItem>{ value: parseInt(enumMember), name: (<string>value[enumMember]).replace(\"_\", \" \") });\r\n//                // Uncomment if you want log\r\n//                // console.log(\"enum member: \", value[enumMember]);\r\n//            }\r\n//        }\r\n//        return keys;\r\n//    }\r\n//}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { piecesRoutingModule } from './pieces-routing.module';\r\nimport { piecesComponent } from './pieces.component';\r\nimport { SetupService } from \"../setup.service\"\r\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation'; //https://github.com/third774/ng-bootstrap-form-validation\r\n\r\n@NgModule({\r\n    imports: [CommonModule, piecesRoutingModule, FormsModule, ReactiveFormsModule, NgBootstrapFormValidationModule ],\r\n    declarations: [piecesComponent]\r\n})\r\nexport class piecesModule {}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/layout/setup/home/home-routing.module.ts","webpack:///./src/app/layout/setup/home/home.component.html","webpack:///./src/app/layout/setup/home/home.component.ts","webpack:///./src/app/layout/setup/home/home.module.ts"],"names":[],"mappings":"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","file":"home-home-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { homeComponent } from './home.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n\t\tcomponent: homeComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class homeRoutingModule {}\r\n","<!-- Form doc: https://phpenthusiast.com/blog/angular-form-ngform-and-two-ways-data-binding -->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n\r\n        <!-- ######## Home Card #########-->\r\n        <div class=\"card m-5\">\r\n            <div class=\"card-header\">\r\n                Home\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form class=\"form-horizontal\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"homeName\" class=\"control-label col-xs-4\">Home Name</label>\r\n                        <div class=\"col-xs-8\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <div class=\"input-group-text\">\r\n                                        <i class=\"fa fa-building-o\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <input [(ngModel)]=\"home.name\" id=\"homeName\" name=\"homeName\" placeholder=\"My Home\" type=\"text\" required=\"required\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--<div *ngIf=\"home.name.invalid && (home.name.dirty || home.name.touched)\"\r\n                         class=\"alert alert-danger\">\r\n\r\n                        <div *ngIf=\"home.name.errors.required\">\r\n                            Home Name is required.\r\n                        </div>\r\n                        <div *ngIf=\"name.errors.minlength\">\r\n                            Name must be at least 4 characters long.\r\n                        </div>\r\n                        <div *ngIf=\"name.errors.forbiddenName\">\r\n                            Name cannot be Bob.\r\n                        </div>\r\n                    </div>-->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fullAddress\" class=\"control-label col-xs-4\">Address</label>\r\n                        <div class=\"col-xs-8\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <div class=\"input-group-text\">\r\n                                        <i class=\"fa fa-address-card-o\"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <input [(ngModel)]=\"home.fullAddress\" id=\"fullAddress\" name=\"fullAddress\" placeholder=\"123 MyStreet, city, state country \" required=\"required\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"city\" class=\"control-label col-xs-4\">City</label>\r\n                        <div class=\"col-xs-8\">\r\n                            <input [(ngModel)]=\"home.city\" id=\"city\" name=\"city\" type=\"text\" class=\"form-control\" required=\"required\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"state\" class=\"control-label col-xs-4\">State</label>\r\n                        <div class=\"col-xs-8\">\r\n                            <input [(ngModel)]=\"home.state\" id=\"state\" name=\"state\" type=\"text\" class=\"form-control\" required=\"required\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"country\" class=\"control-label col-xs-4\">country</label>\r\n                        <div class=\"col-xs-8\">\r\n                            <input [(ngModel)]=\"home.country\" id=\"country\" name=\"country\" type=\"text\" class=\"form-control\" required=\"required\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-xs-offset-4 col-xs-8\">\r\n                            <!--<button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">Submit</button>-->\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- ######## /Home Card #########-->\r\n        \r\n        <div *ngIf=\"EndMessage\" class=\"alert alert-danger\" role=\"alert\">\r\n            {{EndMessage}}\r\n        </div>\r\n        <button class=\"btn btn-lg btn-success\" type=\"button\" (click)=\"Next()\">Next <i class=\"fa fa-forward\"></i></button>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SetupService } from \"../setup.service\"\r\nimport { Home, Piece, PieceTypeEnum } from '@app/shared/classes'\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HomesService } from '@app/shared/services/Homes.service'\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.less']\r\n})\r\nexport class homeComponent implements OnInit {\r\n   \r\n    constructor(private router: Router, private setupService: SetupService, private homesService: HomesService ) {\r\n        \r\n        this.home = {\r\n            city: \"\",\r\n            country: \"\",\r\n            fullAddress: \"\",\r\n            homeId: \"\",\r\n            name: \"\",\r\n            state: \"\"\r\n        };\r\n        \r\n    }\r\n    home: Home;\r\n    \r\n\r\n\r\n    ngOnInit() {\r\n        console.log(\"home.ngOnInit()\");\r\n        this.setupService.setHeadling(\"Home\");\r\n        this.setupService.ActivateBreadCrumb({\r\n            active: true,\r\n            icon: \"fa-home\",\r\n            name: \"Home\",\r\n            route: \"/setup/home\"\r\n        });\r\n        if (this.setupService.CurrentHome != null) {\r\n            this.home = this.setupService.CurrentHome;\r\n        }\r\n        else\r\n        {\r\n            this.homesService.getHomes().subscribe(home => {\r\n                if (home != null && home.length > 0) {\r\n                    this.setupService.CurrentHome = home[0];\r\n                    this.home = home[0];\r\n                    this.setupService.homeSaved = true;\r\n                }\r\n            });\r\n        }\r\n        \r\n        \r\n\r\n        \r\n    }\r\n    \r\n    EndMessage: string;\r\n    private ServiceError(error: any) {\r\n        this.EndMessage = error;\r\n    }\r\n    private ServiceSaved(home: Home) {\r\n        this.home = home;\r\n        this.setupService.CurrentHome = home;\r\n        this.setupService.homeSaved = true;\r\n        this.router.navigate(['/setup/pieces']);\r\n    }\r\n    Next() {\r\n        \r\n        if (this.setupService.homeSaved)\r\n            this.homesService.putHome(this.home.homeId, this.home).subscribe(\r\n                () => {\r\n                    //Completed\r\n                    this.ServiceSaved(this.home);\r\n                },\r\n                error => {\r\n                    this.ServiceError(error);\r\n                },\r\n            );\r\n        else\r\n            this.homesService.postHome(this.home).subscribe(\r\n                (home) => {\r\n                    this.ServiceSaved(home);\r\n                },\r\n                error => {\r\n                    this.ServiceError(error);\r\n                });\r\n\r\n    }\r\n   \r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { homeRoutingModule } from './home-routing.module';\r\nimport { homeComponent } from './home.component';\r\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation'; //https://github.com/third774/ng-bootstrap-form-validation\r\nimport { SetupService } from \"../setup.service\"\r\n@NgModule({\r\n    imports: [CommonModule, homeRoutingModule, FormsModule, ReactiveFormsModule, NgBootstrapFormValidationModule],\r\n    declarations: [homeComponent]\r\n})\r\nexport class homeModule {}\r\n"],"sourceRoot":""}
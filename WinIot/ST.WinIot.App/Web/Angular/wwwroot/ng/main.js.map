{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-load.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/global.service.ts","webpack:///./src/app/shared/Interceptors/jwt-interceptor.service.ts","webpack:///./src/app/shared/auth/kazo.auth.wrapper.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/guard/index.ts","webpack:///./src/app/shared/services/AngularConfig.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./access-denied/access-denied.module.ngfactory\": [\n\t\t\"./src/app/access-denied/access-denied.module.ngfactory.js\",\n\t\t\"access-denied-access-denied-module-ngfactory\"\n\t],\n\t\"./blank-page/blank-page.module.ngfactory\": [\n\t\t\"./src/app/layout/blank-page/blank-page.module.ngfactory.js\",\n\t\t\"blank-page-blank-page-module-ngfactory\"\n\t],\n\t\"./bs-component/bs-component.module.ngfactory\": [\n\t\t\"./src/app/layout/bs-component/bs-component.module.ngfactory.js\",\n\t\t\"default~bs-component-bs-component-module-ngfactory~dashboard-dashboard-module-ngfactory~layout-layou~98d1f8a5\",\n\t\t\"default~bs-component-bs-component-module-ngfactory~dashboard-dashboard-module-ngfactory\",\n\t\t\"common\",\n\t\t\"bs-component-bs-component-module-ngfactory\"\n\t],\n\t\"./bs-element/bs-element.module.ngfactory\": [\n\t\t\"./src/app/layout/bs-element/bs-element.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"bs-element-bs-element-module-ngfactory\"\n\t],\n\t\"./charts/charts.module.ngfactory\": [\n\t\t\"./src/app/layout/charts/charts.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"charts-charts-module-ngfactory\"\n\t],\n\t\"./dashboard/dashboard.module.ngfactory\": [\n\t\t\"./src/app/layout/dashboard/dashboard.module.ngfactory.js\",\n\t\t\"default~bs-component-bs-component-module-ngfactory~dashboard-dashboard-module-ngfactory~layout-layou~98d1f8a5\",\n\t\t\"default~bs-component-bs-component-module-ngfactory~dashboard-dashboard-module-ngfactory\",\n\t\t\"common\",\n\t\t\"dashboard-dashboard-module-ngfactory\"\n\t],\n\t\"./form/form.module.ngfactory\": [\n\t\t\"./src/app/layout/form/form.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"form-form-module-ngfactory\"\n\t],\n\t\"./grid/grid.module.ngfactory\": [\n\t\t\"./src/app/layout/grid/grid.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"grid-grid-module-ngfactory\"\n\t],\n\t\"./layout/layout.module.ngfactory\": [\n\t\t\"./src/app/layout/layout.module.ngfactory.js\",\n\t\t\"default~bs-component-bs-component-module-ngfactory~dashboard-dashboard-module-ngfactory~layout-layou~98d1f8a5\",\n\t\t\"common\",\n\t\t\"layout-layout-module-ngfactory\"\n\t],\n\t\"./login/login.module.ngfactory\": [\n\t\t\"./src/app/login/login.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"login-login-module-ngfactory\"\n\t],\n\t\"./not-found/not-found.module.ngfactory\": [\n\t\t\"./src/app/not-found/not-found.module.ngfactory.js\",\n\t\t\"not-found-not-found-module-ngfactory\"\n\t],\n\t\"./server-error/server-error.module.ngfactory\": [\n\t\t\"./src/app/server-error/server-error.module.ngfactory.js\",\n\t\t\"server-error-server-error-module-ngfactory\"\n\t],\n\t\"./signup/signup.module.ngfactory\": [\n\t\t\"./src/app/signup/signup.module.ngfactory.js\",\n\t\t\"signup-signup-module-ngfactory\"\n\t],\n\t\"./tables/tables.module.ngfactory\": [\n\t\t\"./src/app/layout/tables/tables.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"tables-tables-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\nimport { OAuthService, JwksValidationHandler } from 'angular-oauth2-oidc'; //https://dev.to/ped4enko/how-to-build-an-angular-app-with-authentication-in-30-minutes-506k\r\nimport { AngularService } from \"./shared/services/AngularConfig.service\"\r\nimport { GlobalService } from \"./global.service\";\r\nimport 'rxjs/add/operator/toPromise';\r\n@Injectable()\r\nexport class AppLoadService {\r\n    constructor(private oauthService: OAuthService, private configService: AngularService, private global: GlobalService) {\r\n        //Doc source : https://www.intertech.com/Blog/angular-4-tutorial-run-code-during-app-initialization/\r\n    }\r\n    loadSettings(): Promise<any> {\r\n        console.log(\"loadSetting fired\")\r\n        const promise = this.configService.getAuth().toPromise().then(o => {\r\n            var openIdConfig = o.authServer + \"/.well-known/openid-configuration\";\r\n            \r\n            this.global.ApiConfig = o;\r\n\r\n            //https://www.linkedin.com/pulse/implicit-flow-authentication-using-angular-ghanshyam-shukla\r\n            this.oauthService.redirectUri = window.location.origin;\r\n            this.oauthService.clientId = o.clientId;\r\n            this.oauthService.scope = o.scope;\r\n            this.oauthService.issuer = o.authServer;\r\n            this.oauthService.tokenValidationHandler = new JwksValidationHandler();\r\n            console.log(\"ApiCongig Received ::\", o);\r\n            console.log(\"Load config at \" + openIdConfig);\r\n            return this.oauthService.loadDiscoveryDocument();//\"https://dev.kazo.ca/auth/.well-known/openid-configuration\"\r\n\r\n        }).catch(raison => {\r\n            console.error(\"Load settings failed\", raison);\r\n            });\r\n        return promise;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { AppComponent } from './app.component';\nimport { AuthGuard } from './shared/guard';\n\nconst routes: Routes = [\n    { path: '', loadChildren: './layout/layout.module#LayoutModule', canActivate: [AuthGuard] },\n    { path: 'login', loadChildren: './login/login.module#LoginModule' },\n    { path: 'signup', loadChildren: './signup/signup.module#SignupModule' },\n    { path: 'error', loadChildren: './server-error/server-error.module#ServerErrorModule' },\n    { path: 'access-denied', loadChildren: './access-denied/access-denied.module#AccessDeniedModule' },\n    { path: 'not-found', loadChildren: './not-found/not-found.module#NotFoundModule' },\n    { path: '**', redirectTo: 'not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\r\nimport { OAuthService, JwksValidationHandler } from 'angular-oauth2-oidc'; //https://dev.to/ped4enko/how-to-build-an-angular-app-with-authentication-in-30-minutes-506k\r\nimport { AngularService } from \"./shared/services/AngularConfig.service\"\r\nimport { GlobalService } from \"./global.service\";\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor(private oauthService: OAuthService, private configService: AngularService, private global: GlobalService) {\r\n\r\n        \r\n        // Load Discovery Document and then try to login the user\r\n        \r\n            this.oauthService.tryLogin();\r\n       \r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard, KazoAuthWrapper } from './shared';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OAuthService, OAuthModule, UrlHelperService, OAuthLogger } from 'angular-oauth2-oidc';\r\nimport { GlobalService } from \"./global.service\";\r\nimport { AngularService } from \"./shared/services/AngularConfig.service\"\r\nimport { JwtInterceptor } from \"./shared/Interceptors/jwt-interceptor.service\"\r\nimport { AppLoadService } from \"./app-load.service\"\r\n// AoT requires an exported function for factories\r\nexport const createTranslateLoader = (http: HttpClient) => {\r\n  /* for development\r\n  return new TranslateHttpLoader(\r\n      http,\r\n      '/start-angular/SB-Admin-BS4-Angular-6/master/dist/assets/i18n/',\r\n      '.json'\r\n  ); */\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n};\r\nexport function load_settings(appLoadService: AppLoadService) {\r\n    return () => appLoadService.loadSettings();\r\n}\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    OAuthModule.forRoot()\r\n  ],\r\n  declarations: [AppComponent],\r\n    providers: [\r\n        GlobalService,\r\n        AngularService,\r\n        AuthGuard,\r\n        KazoAuthWrapper,\r\n        OAuthService,\r\n        AppLoadService,\r\n        { provide: APP_INITIALIZER, useFactory: load_settings, deps: [AppLoadService], multi: true },\r\n        UrlHelperService,\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MyAngularConfig } from \"./shared/classes/MyAngularConfig\";\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n    constructor() {\r\n        \r\n    }\r\n    ApiConfig: MyAngularConfig;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n//Maybe this is not needed. Maybe the oauth2 allredy do this (It can be configured : https://github.com/manfredsteyer/angular-oauth2-oidc#calling-a-web-api-with-an-access-token)\r\n//Reference doc : http://jasonwatmore.com/post/2018/11/16/angular-7-jwt-authentication-example-tutorial\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: OAuthService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let connected = this.authenticationService.hasValidAccessToken();\r\n        if (connected) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${this.authenticationService.getAccessToken()}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Injectable } from '@angular/core';\r\nimport { Promise } from 'q';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class KazoAuthWrapper {\r\n\r\n  constructor(private oauthService: OAuthService) {\r\n    \r\n    }\r\n\r\n    loginWithPassword(userName: string, password: string) {\r\n        return this.oauthService\r\n            .fetchTokenUsingPasswordFlow(\r\n                userName,\r\n                password\r\n            );\r\n    }\r\n    login() {\r\n        this.oauthService.initImplicitFlow();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.oauthService.hasValidIdToken()) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","export * from './auth.guard';\n","﻿\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'; \r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { MyAngularConfig } from '../classes/MyAngularConfig';\r\n//LocalCall\r\n@Injectable()\r\nexport class AngularService {\r\n    constructor(private _httpClient: HttpClient) { }        \r\n    \r\n    // get: config/Angular/GetAuth      \r\n    getAuth(): Observable<MyAngularConfig> {\r\n        var _Url = `/config/Angular/GetAuth`;\r\n            return this._httpClient.get<MyAngularConfig>(_Url)\r\n                .catch(this.handleError);\r\n    }\r\n    \r\n    // Utility\r\n    private handleError(error: HttpErrorResponse) {\r\n        console.error(error);\r\n        let customError: string = \"\";\r\n        if (error.error) {\r\n            customError = error.status === 400 ? error.error : error.statusText\r\n        }\r\n        return Observable.throw(customError || 'Server error');\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ST.WinIot.App.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Device
    {
        /// <summary>
        /// Initializes a new instance of the Device class.
        /// </summary>
        public Device() { }

        /// <summary>
        /// Initializes a new instance of the Device class.
        /// </summary>
        public Device(string deviceId, string hubId, string pieceId, string name, int arduinoId, string userId = default(string), string relayId = default(string), DeviceType deviceType = default(DeviceType), IList<DeviceTrait> traits = default(IList<DeviceTrait>), IList<DeviceNickName> nickNames = default(IList<DeviceNickName>))
        {
            DeviceId = deviceId;
            UserId = userId;
            RelayId = relayId;
            HubId = hubId;
            PieceId = pieceId;
            Name = name;
            ArduinoId = arduinoId;
            DeviceType = deviceType;
            Traits = traits;
            NickNames = nickNames;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deviceId")]
        public string DeviceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relayId")]
        public string RelayId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hubId")]
        public string HubId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pieceId")]
        public string PieceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "arduinoId")]
        public int ArduinoId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deviceType")]
        public DeviceType DeviceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traits")]
        public IList<DeviceTrait> Traits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nickNames")]
        public IList<DeviceNickName> NickNames { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DeviceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DeviceId");
            }
            if (HubId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HubId");
            }
            if (PieceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PieceId");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (this.Name != null)
            {
                if (this.Name.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 1);
                }
            }
            if (this.NickNames != null)
            {
                foreach (var element in this.NickNames)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ST.WinIot.App.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Relay
    {
        /// <summary>
        /// Initializes a new instance of the Relay class.
        /// </summary>
        public Relay() { }

        /// <summary>
        /// Initializes a new instance of the Relay class.
        /// </summary>
        public Relay(string relayId, string hubId, string userId, string name, int connectionType, string hardWare = default(string))
        {
            RelayId = relayId;
            HubId = hubId;
            UserId = userId;
            Name = name;
            HardWare = hardWare;
            ConnectionType = connectionType;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relayId")]
        public string RelayId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hubId")]
        public string HubId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hardWare")]
        public string HardWare { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connectionType")]
        public int ConnectionType { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (RelayId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RelayId");
            }
            if (HubId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HubId");
            }
            if (UserId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserId");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (this.UserId != null)
            {
                if (this.UserId.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "UserId", 1);
                }
            }
            if (this.Name != null)
            {
                if (this.Name.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 1);
                }
            }
        }
    }
}
